/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.hops.examples.flink;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SourceTransaction extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4531808187706516791L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SourceTransaction\",\"namespace\":\"io.hops.examples.flink\",\"fields\":[{\"name\":\"batch_time\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"envelope_metadata\",\"type\":[{\"type\":\"record\",\"name\":\"envelope_metadata\",\"fields\":[{\"name\":\"client_ref\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"created_at\",\"type\":[\"long\",\"null\"]},{\"name\":\"source\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"tags\",\"type\":[{\"type\":\"record\",\"name\":\"tags\",\"fields\":[{\"name\":\"tracking_id\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]}]},\"null\"]},{\"name\":\"type\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"version\",\"type\":[\"long\",\"null\"]},{\"name\":\"created_at_ts\",\"type\":[{\"type\":\"long\",\"logicalType\":\"timestamp-micros\"},\"null\"]}]},\"null\"]},{\"name\":\"processed_by\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"pulled_timestamp\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"tsp_name\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"user_uuid\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"transaction_id\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"transaction\",\"type\":[{\"type\":\"record\",\"name\":\"transaction\",\"fields\":[{\"name\":\"address\",\"type\":[{\"type\":\"record\",\"name\":\"address\",\"fields\":[{\"name\":\"city\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"country\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"postcode\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]}]},\"null\"]},{\"name\":\"amount\",\"type\":[\"double\",\"null\"]},{\"name\":\"balance\",\"type\":[\"double\",\"null\"]},{\"name\":\"bookingDate\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"categorisations\",\"type\":[{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"categorisations\",\"fields\":[{\"name\":\"code\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"confidence\",\"type\":[\"double\",\"null\"]},{\"name\":\"name\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"scheme\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]}]},\"null\"]},\"null\"]},{\"name\":\"codes\",\"type\":[{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"codes\",\"fields\":[{\"name\":\"code\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"scheme\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"subCode\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]}]},\"null\"]},\"null\"]},{\"name\":\"id\",\"type\":[\"long\",\"null\"]},{\"name\":\"merchant\",\"type\":[{\"type\":\"record\",\"name\":\"merchant\",\"fields\":[{\"name\":\"isoCode\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"name\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]}]},\"null\"]},{\"name\":\"ownedItemId\",\"type\":[\"long\",\"null\"]},{\"name\":\"status\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"transaction_uuid\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"createdDate\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"currency\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"descriptions\",\"type\":[{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"descriptions\",\"fields\":[{\"name\":\"scheme\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"text\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]}]},\"null\"]},\"null\"]}]},\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SourceTransaction> ENCODER =
      new BinaryMessageEncoder<SourceTransaction>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SourceTransaction> DECODER =
      new BinaryMessageDecoder<SourceTransaction>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SourceTransaction> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SourceTransaction> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SourceTransaction>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SourceTransaction to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SourceTransaction from a ByteBuffer. */
  public static SourceTransaction fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String batch_time;
  @Deprecated public io.hops.examples.flink.envelope_metadata envelope_metadata;
  @Deprecated public java.lang.String processed_by;
  @Deprecated public java.lang.String pulled_timestamp;
  @Deprecated public java.lang.String tsp_name;
  @Deprecated public java.lang.String user_uuid;
  @Deprecated public java.lang.String transaction_id;
  @Deprecated public io.hops.examples.flink.transaction transaction;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SourceTransaction() {}

  /**
   * All-args constructor.
   * @param batch_time The new value for batch_time
   * @param envelope_metadata The new value for envelope_metadata
   * @param processed_by The new value for processed_by
   * @param pulled_timestamp The new value for pulled_timestamp
   * @param tsp_name The new value for tsp_name
   * @param user_uuid The new value for user_uuid
   * @param transaction_id The new value for transaction_id
   * @param transaction The new value for transaction
   */
  public SourceTransaction(java.lang.String batch_time, io.hops.examples.flink.envelope_metadata envelope_metadata, java.lang.String processed_by, java.lang.String pulled_timestamp, java.lang.String tsp_name, java.lang.String user_uuid, java.lang.String transaction_id, io.hops.examples.flink.transaction transaction) {
    this.batch_time = batch_time;
    this.envelope_metadata = envelope_metadata;
    this.processed_by = processed_by;
    this.pulled_timestamp = pulled_timestamp;
    this.tsp_name = tsp_name;
    this.user_uuid = user_uuid;
    this.transaction_id = transaction_id;
    this.transaction = transaction;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return batch_time;
    case 1: return envelope_metadata;
    case 2: return processed_by;
    case 3: return pulled_timestamp;
    case 4: return tsp_name;
    case 5: return user_uuid;
    case 6: return transaction_id;
    case 7: return transaction;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: batch_time = (java.lang.String)value$; break;
    case 1: envelope_metadata = (io.hops.examples.flink.envelope_metadata)value$; break;
    case 2: processed_by = (java.lang.String)value$; break;
    case 3: pulled_timestamp = (java.lang.String)value$; break;
    case 4: tsp_name = (java.lang.String)value$; break;
    case 5: user_uuid = (java.lang.String)value$; break;
    case 6: transaction_id = (java.lang.String)value$; break;
    case 7: transaction = (io.hops.examples.flink.transaction)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'batch_time' field.
   * @return The value of the 'batch_time' field.
   */
  public java.lang.String getBatchTime() {
    return batch_time;
  }

  /**
   * Sets the value of the 'batch_time' field.
   * @param value the value to set.
   */
  public void setBatchTime(java.lang.String value) {
    this.batch_time = value;
  }

  /**
   * Gets the value of the 'envelope_metadata' field.
   * @return The value of the 'envelope_metadata' field.
   */
  public io.hops.examples.flink.envelope_metadata getEnvelopeMetadata() {
    return envelope_metadata;
  }

  /**
   * Sets the value of the 'envelope_metadata' field.
   * @param value the value to set.
   */
  public void setEnvelopeMetadata(io.hops.examples.flink.envelope_metadata value) {
    this.envelope_metadata = value;
  }

  /**
   * Gets the value of the 'processed_by' field.
   * @return The value of the 'processed_by' field.
   */
  public java.lang.String getProcessedBy() {
    return processed_by;
  }

  /**
   * Sets the value of the 'processed_by' field.
   * @param value the value to set.
   */
  public void setProcessedBy(java.lang.String value) {
    this.processed_by = value;
  }

  /**
   * Gets the value of the 'pulled_timestamp' field.
   * @return The value of the 'pulled_timestamp' field.
   */
  public java.lang.String getPulledTimestamp() {
    return pulled_timestamp;
  }

  /**
   * Sets the value of the 'pulled_timestamp' field.
   * @param value the value to set.
   */
  public void setPulledTimestamp(java.lang.String value) {
    this.pulled_timestamp = value;
  }

  /**
   * Gets the value of the 'tsp_name' field.
   * @return The value of the 'tsp_name' field.
   */
  public java.lang.String getTspName() {
    return tsp_name;
  }

  /**
   * Sets the value of the 'tsp_name' field.
   * @param value the value to set.
   */
  public void setTspName(java.lang.String value) {
    this.tsp_name = value;
  }

  /**
   * Gets the value of the 'user_uuid' field.
   * @return The value of the 'user_uuid' field.
   */
  public java.lang.String getUserUuid() {
    return user_uuid;
  }

  /**
   * Sets the value of the 'user_uuid' field.
   * @param value the value to set.
   */
  public void setUserUuid(java.lang.String value) {
    this.user_uuid = value;
  }

  /**
   * Gets the value of the 'transaction_id' field.
   * @return The value of the 'transaction_id' field.
   */
  public java.lang.String getTransactionId() {
    return transaction_id;
  }

  /**
   * Sets the value of the 'transaction_id' field.
   * @param value the value to set.
   */
  public void setTransactionId(java.lang.String value) {
    this.transaction_id = value;
  }

  /**
   * Gets the value of the 'transaction' field.
   * @return The value of the 'transaction' field.
   */
  public io.hops.examples.flink.transaction getTransaction() {
    return transaction;
  }

  /**
   * Sets the value of the 'transaction' field.
   * @param value the value to set.
   */
  public void setTransaction(io.hops.examples.flink.transaction value) {
    this.transaction = value;
  }

  /**
   * Creates a new SourceTransaction RecordBuilder.
   * @return A new SourceTransaction RecordBuilder
   */
  public static io.hops.examples.flink.SourceTransaction.Builder newBuilder() {
    return new io.hops.examples.flink.SourceTransaction.Builder();
  }

  /**
   * Creates a new SourceTransaction RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SourceTransaction RecordBuilder
   */
  public static io.hops.examples.flink.SourceTransaction.Builder newBuilder(io.hops.examples.flink.SourceTransaction.Builder other) {
    return new io.hops.examples.flink.SourceTransaction.Builder(other);
  }

  /**
   * Creates a new SourceTransaction RecordBuilder by copying an existing SourceTransaction instance.
   * @param other The existing instance to copy.
   * @return A new SourceTransaction RecordBuilder
   */
  public static io.hops.examples.flink.SourceTransaction.Builder newBuilder(io.hops.examples.flink.SourceTransaction other) {
    return new io.hops.examples.flink.SourceTransaction.Builder(other);
  }

  /**
   * RecordBuilder for SourceTransaction instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SourceTransaction>
    implements org.apache.avro.data.RecordBuilder<SourceTransaction> {

    private java.lang.String batch_time;
    private io.hops.examples.flink.envelope_metadata envelope_metadata;
    private io.hops.examples.flink.envelope_metadata.Builder envelope_metadataBuilder;
    private java.lang.String processed_by;
    private java.lang.String pulled_timestamp;
    private java.lang.String tsp_name;
    private java.lang.String user_uuid;
    private java.lang.String transaction_id;
    private io.hops.examples.flink.transaction transaction;
    private io.hops.examples.flink.transaction.Builder transactionBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.hops.examples.flink.SourceTransaction.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.batch_time)) {
        this.batch_time = data().deepCopy(fields()[0].schema(), other.batch_time);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.envelope_metadata)) {
        this.envelope_metadata = data().deepCopy(fields()[1].schema(), other.envelope_metadata);
        fieldSetFlags()[1] = true;
      }
      if (other.hasEnvelopeMetadataBuilder()) {
        this.envelope_metadataBuilder = io.hops.examples.flink.envelope_metadata.newBuilder(other.getEnvelopeMetadataBuilder());
      }
      if (isValidValue(fields()[2], other.processed_by)) {
        this.processed_by = data().deepCopy(fields()[2].schema(), other.processed_by);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.pulled_timestamp)) {
        this.pulled_timestamp = data().deepCopy(fields()[3].schema(), other.pulled_timestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.tsp_name)) {
        this.tsp_name = data().deepCopy(fields()[4].schema(), other.tsp_name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.user_uuid)) {
        this.user_uuid = data().deepCopy(fields()[5].schema(), other.user_uuid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.transaction_id)) {
        this.transaction_id = data().deepCopy(fields()[6].schema(), other.transaction_id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.transaction)) {
        this.transaction = data().deepCopy(fields()[7].schema(), other.transaction);
        fieldSetFlags()[7] = true;
      }
      if (other.hasTransactionBuilder()) {
        this.transactionBuilder = io.hops.examples.flink.transaction.newBuilder(other.getTransactionBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing SourceTransaction instance
     * @param other The existing instance to copy.
     */
    private Builder(io.hops.examples.flink.SourceTransaction other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.batch_time)) {
        this.batch_time = data().deepCopy(fields()[0].schema(), other.batch_time);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.envelope_metadata)) {
        this.envelope_metadata = data().deepCopy(fields()[1].schema(), other.envelope_metadata);
        fieldSetFlags()[1] = true;
      }
      this.envelope_metadataBuilder = null;
      if (isValidValue(fields()[2], other.processed_by)) {
        this.processed_by = data().deepCopy(fields()[2].schema(), other.processed_by);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.pulled_timestamp)) {
        this.pulled_timestamp = data().deepCopy(fields()[3].schema(), other.pulled_timestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.tsp_name)) {
        this.tsp_name = data().deepCopy(fields()[4].schema(), other.tsp_name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.user_uuid)) {
        this.user_uuid = data().deepCopy(fields()[5].schema(), other.user_uuid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.transaction_id)) {
        this.transaction_id = data().deepCopy(fields()[6].schema(), other.transaction_id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.transaction)) {
        this.transaction = data().deepCopy(fields()[7].schema(), other.transaction);
        fieldSetFlags()[7] = true;
      }
      this.transactionBuilder = null;
    }

    /**
      * Gets the value of the 'batch_time' field.
      * @return The value.
      */
    public java.lang.String getBatchTime() {
      return batch_time;
    }

    /**
      * Sets the value of the 'batch_time' field.
      * @param value The value of 'batch_time'.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder setBatchTime(java.lang.String value) {
      validate(fields()[0], value);
      this.batch_time = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'batch_time' field has been set.
      * @return True if the 'batch_time' field has been set, false otherwise.
      */
    public boolean hasBatchTime() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'batch_time' field.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder clearBatchTime() {
      batch_time = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'envelope_metadata' field.
      * @return The value.
      */
    public io.hops.examples.flink.envelope_metadata getEnvelopeMetadata() {
      return envelope_metadata;
    }

    /**
      * Sets the value of the 'envelope_metadata' field.
      * @param value The value of 'envelope_metadata'.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder setEnvelopeMetadata(io.hops.examples.flink.envelope_metadata value) {
      validate(fields()[1], value);
      this.envelope_metadataBuilder = null;
      this.envelope_metadata = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'envelope_metadata' field has been set.
      * @return True if the 'envelope_metadata' field has been set, false otherwise.
      */
    public boolean hasEnvelopeMetadata() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'envelope_metadata' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.hops.examples.flink.envelope_metadata.Builder getEnvelopeMetadataBuilder() {
      if (envelope_metadataBuilder == null) {
        if (hasEnvelopeMetadata()) {
          setEnvelopeMetadataBuilder(io.hops.examples.flink.envelope_metadata.newBuilder(envelope_metadata));
        } else {
          setEnvelopeMetadataBuilder(io.hops.examples.flink.envelope_metadata.newBuilder());
        }
      }
      return envelope_metadataBuilder;
    }

    /**
     * Sets the Builder instance for the 'envelope_metadata' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.hops.examples.flink.SourceTransaction.Builder setEnvelopeMetadataBuilder(io.hops.examples.flink.envelope_metadata.Builder value) {
      clearEnvelopeMetadata();
      envelope_metadataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'envelope_metadata' field has an active Builder instance
     * @return True if the 'envelope_metadata' field has an active Builder instance
     */
    public boolean hasEnvelopeMetadataBuilder() {
      return envelope_metadataBuilder != null;
    }

    /**
      * Clears the value of the 'envelope_metadata' field.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder clearEnvelopeMetadata() {
      envelope_metadata = null;
      envelope_metadataBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'processed_by' field.
      * @return The value.
      */
    public java.lang.String getProcessedBy() {
      return processed_by;
    }

    /**
      * Sets the value of the 'processed_by' field.
      * @param value The value of 'processed_by'.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder setProcessedBy(java.lang.String value) {
      validate(fields()[2], value);
      this.processed_by = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'processed_by' field has been set.
      * @return True if the 'processed_by' field has been set, false otherwise.
      */
    public boolean hasProcessedBy() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'processed_by' field.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder clearProcessedBy() {
      processed_by = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'pulled_timestamp' field.
      * @return The value.
      */
    public java.lang.String getPulledTimestamp() {
      return pulled_timestamp;
    }

    /**
      * Sets the value of the 'pulled_timestamp' field.
      * @param value The value of 'pulled_timestamp'.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder setPulledTimestamp(java.lang.String value) {
      validate(fields()[3], value);
      this.pulled_timestamp = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'pulled_timestamp' field has been set.
      * @return True if the 'pulled_timestamp' field has been set, false otherwise.
      */
    public boolean hasPulledTimestamp() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'pulled_timestamp' field.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder clearPulledTimestamp() {
      pulled_timestamp = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'tsp_name' field.
      * @return The value.
      */
    public java.lang.String getTspName() {
      return tsp_name;
    }

    /**
      * Sets the value of the 'tsp_name' field.
      * @param value The value of 'tsp_name'.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder setTspName(java.lang.String value) {
      validate(fields()[4], value);
      this.tsp_name = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'tsp_name' field has been set.
      * @return True if the 'tsp_name' field has been set, false otherwise.
      */
    public boolean hasTspName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'tsp_name' field.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder clearTspName() {
      tsp_name = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_uuid' field.
      * @return The value.
      */
    public java.lang.String getUserUuid() {
      return user_uuid;
    }

    /**
      * Sets the value of the 'user_uuid' field.
      * @param value The value of 'user_uuid'.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder setUserUuid(java.lang.String value) {
      validate(fields()[5], value);
      this.user_uuid = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'user_uuid' field has been set.
      * @return True if the 'user_uuid' field has been set, false otherwise.
      */
    public boolean hasUserUuid() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'user_uuid' field.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder clearUserUuid() {
      user_uuid = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'transaction_id' field.
      * @return The value.
      */
    public java.lang.String getTransactionId() {
      return transaction_id;
    }

    /**
      * Sets the value of the 'transaction_id' field.
      * @param value The value of 'transaction_id'.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder setTransactionId(java.lang.String value) {
      validate(fields()[6], value);
      this.transaction_id = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'transaction_id' field has been set.
      * @return True if the 'transaction_id' field has been set, false otherwise.
      */
    public boolean hasTransactionId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'transaction_id' field.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder clearTransactionId() {
      transaction_id = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'transaction' field.
      * @return The value.
      */
    public io.hops.examples.flink.transaction getTransaction() {
      return transaction;
    }

    /**
      * Sets the value of the 'transaction' field.
      * @param value The value of 'transaction'.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder setTransaction(io.hops.examples.flink.transaction value) {
      validate(fields()[7], value);
      this.transactionBuilder = null;
      this.transaction = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'transaction' field has been set.
      * @return True if the 'transaction' field has been set, false otherwise.
      */
    public boolean hasTransaction() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'transaction' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.hops.examples.flink.transaction.Builder getTransactionBuilder() {
      if (transactionBuilder == null) {
        if (hasTransaction()) {
          setTransactionBuilder(io.hops.examples.flink.transaction.newBuilder(transaction));
        } else {
          setTransactionBuilder(io.hops.examples.flink.transaction.newBuilder());
        }
      }
      return transactionBuilder;
    }

    /**
     * Sets the Builder instance for the 'transaction' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.hops.examples.flink.SourceTransaction.Builder setTransactionBuilder(io.hops.examples.flink.transaction.Builder value) {
      clearTransaction();
      transactionBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'transaction' field has an active Builder instance
     * @return True if the 'transaction' field has an active Builder instance
     */
    public boolean hasTransactionBuilder() {
      return transactionBuilder != null;
    }

    /**
      * Clears the value of the 'transaction' field.
      * @return This builder.
      */
    public io.hops.examples.flink.SourceTransaction.Builder clearTransaction() {
      transaction = null;
      transactionBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SourceTransaction build() {
      try {
        SourceTransaction record = new SourceTransaction();
        record.batch_time = fieldSetFlags()[0] ? this.batch_time : (java.lang.String) defaultValue(fields()[0]);
        if (envelope_metadataBuilder != null) {
          record.envelope_metadata = this.envelope_metadataBuilder.build();
        } else {
          record.envelope_metadata = fieldSetFlags()[1] ? this.envelope_metadata : (io.hops.examples.flink.envelope_metadata) defaultValue(fields()[1]);
        }
        record.processed_by = fieldSetFlags()[2] ? this.processed_by : (java.lang.String) defaultValue(fields()[2]);
        record.pulled_timestamp = fieldSetFlags()[3] ? this.pulled_timestamp : (java.lang.String) defaultValue(fields()[3]);
        record.tsp_name = fieldSetFlags()[4] ? this.tsp_name : (java.lang.String) defaultValue(fields()[4]);
        record.user_uuid = fieldSetFlags()[5] ? this.user_uuid : (java.lang.String) defaultValue(fields()[5]);
        record.transaction_id = fieldSetFlags()[6] ? this.transaction_id : (java.lang.String) defaultValue(fields()[6]);
        if (transactionBuilder != null) {
          record.transaction = this.transactionBuilder.build();
        } else {
          record.transaction = fieldSetFlags()[7] ? this.transaction : (io.hops.examples.flink.transaction) defaultValue(fields()[7]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SourceTransaction>
    WRITER$ = (org.apache.avro.io.DatumWriter<SourceTransaction>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SourceTransaction>
    READER$ = (org.apache.avro.io.DatumReader<SourceTransaction>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
