/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.hops.examples.flink;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class envelope_metadata extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6018674915008507239L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"envelope_metadata\",\"namespace\":\"io.hops.examples.flink\",\"fields\":[{\"name\":\"client_ref\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"created_at\",\"type\":[\"long\",\"null\"]},{\"name\":\"source\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"tags\",\"type\":[{\"type\":\"record\",\"name\":\"tags\",\"fields\":[{\"name\":\"tracking_id\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]}]},\"null\"]},{\"name\":\"type\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"version\",\"type\":[\"long\",\"null\"]},{\"name\":\"created_at_ts\",\"type\":[{\"type\":\"long\",\"logicalType\":\"timestamp-micros\"},\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<envelope_metadata> ENCODER =
      new BinaryMessageEncoder<envelope_metadata>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<envelope_metadata> DECODER =
      new BinaryMessageDecoder<envelope_metadata>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<envelope_metadata> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<envelope_metadata> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<envelope_metadata>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this envelope_metadata to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a envelope_metadata from a ByteBuffer. */
  public static envelope_metadata fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String client_ref;
  @Deprecated public java.lang.Long created_at;
  @Deprecated public java.lang.String source;
  @Deprecated public io.hops.examples.flink.tags tags;
  @Deprecated public java.lang.String type;
  @Deprecated public java.lang.Long version;
  @Deprecated public java.lang.Long created_at_ts;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public envelope_metadata() {}

  /**
   * All-args constructor.
   * @param client_ref The new value for client_ref
   * @param created_at The new value for created_at
   * @param source The new value for source
   * @param tags The new value for tags
   * @param type The new value for type
   * @param version The new value for version
   * @param created_at_ts The new value for created_at_ts
   */
  public envelope_metadata(java.lang.String client_ref, java.lang.Long created_at, java.lang.String source, io.hops.examples.flink.tags tags, java.lang.String type, java.lang.Long version, java.lang.Long created_at_ts) {
    this.client_ref = client_ref;
    this.created_at = created_at;
    this.source = source;
    this.tags = tags;
    this.type = type;
    this.version = version;
    this.created_at_ts = created_at_ts;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return client_ref;
    case 1: return created_at;
    case 2: return source;
    case 3: return tags;
    case 4: return type;
    case 5: return version;
    case 6: return created_at_ts;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: client_ref = (java.lang.String)value$; break;
    case 1: created_at = (java.lang.Long)value$; break;
    case 2: source = (java.lang.String)value$; break;
    case 3: tags = (io.hops.examples.flink.tags)value$; break;
    case 4: type = (java.lang.String)value$; break;
    case 5: version = (java.lang.Long)value$; break;
    case 6: created_at_ts = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'client_ref' field.
   * @return The value of the 'client_ref' field.
   */
  public java.lang.String getClientRef() {
    return client_ref;
  }

  /**
   * Sets the value of the 'client_ref' field.
   * @param value the value to set.
   */
  public void setClientRef(java.lang.String value) {
    this.client_ref = value;
  }

  /**
   * Gets the value of the 'created_at' field.
   * @return The value of the 'created_at' field.
   */
  public java.lang.Long getCreatedAt() {
    return created_at;
  }

  /**
   * Sets the value of the 'created_at' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.lang.Long value) {
    this.created_at = value;
  }

  /**
   * Gets the value of the 'source' field.
   * @return The value of the 'source' field.
   */
  public java.lang.String getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(java.lang.String value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'tags' field.
   * @return The value of the 'tags' field.
   */
  public io.hops.examples.flink.tags getTags() {
    return tags;
  }

  /**
   * Sets the value of the 'tags' field.
   * @param value the value to set.
   */
  public void setTags(io.hops.examples.flink.tags value) {
    this.tags = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public java.lang.Long getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.Long value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'created_at_ts' field.
   * @return The value of the 'created_at_ts' field.
   */
  public java.lang.Long getCreatedAtTs() {
    return created_at_ts;
  }

  /**
   * Sets the value of the 'created_at_ts' field.
   * @param value the value to set.
   */
  public void setCreatedAtTs(java.lang.Long value) {
    this.created_at_ts = value;
  }

  /**
   * Creates a new envelope_metadata RecordBuilder.
   * @return A new envelope_metadata RecordBuilder
   */
  public static io.hops.examples.flink.envelope_metadata.Builder newBuilder() {
    return new io.hops.examples.flink.envelope_metadata.Builder();
  }

  /**
   * Creates a new envelope_metadata RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new envelope_metadata RecordBuilder
   */
  public static io.hops.examples.flink.envelope_metadata.Builder newBuilder(io.hops.examples.flink.envelope_metadata.Builder other) {
    return new io.hops.examples.flink.envelope_metadata.Builder(other);
  }

  /**
   * Creates a new envelope_metadata RecordBuilder by copying an existing envelope_metadata instance.
   * @param other The existing instance to copy.
   * @return A new envelope_metadata RecordBuilder
   */
  public static io.hops.examples.flink.envelope_metadata.Builder newBuilder(io.hops.examples.flink.envelope_metadata other) {
    return new io.hops.examples.flink.envelope_metadata.Builder(other);
  }

  /**
   * RecordBuilder for envelope_metadata instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<envelope_metadata>
    implements org.apache.avro.data.RecordBuilder<envelope_metadata> {

    private java.lang.String client_ref;
    private java.lang.Long created_at;
    private java.lang.String source;
    private io.hops.examples.flink.tags tags;
    private io.hops.examples.flink.tags.Builder tagsBuilder;
    private java.lang.String type;
    private java.lang.Long version;
    private java.lang.Long created_at_ts;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.hops.examples.flink.envelope_metadata.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.client_ref)) {
        this.client_ref = data().deepCopy(fields()[0].schema(), other.client_ref);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.created_at)) {
        this.created_at = data().deepCopy(fields()[1].schema(), other.created_at);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.source)) {
        this.source = data().deepCopy(fields()[2].schema(), other.source);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.tags)) {
        this.tags = data().deepCopy(fields()[3].schema(), other.tags);
        fieldSetFlags()[3] = true;
      }
      if (other.hasTagsBuilder()) {
        this.tagsBuilder = io.hops.examples.flink.tags.newBuilder(other.getTagsBuilder());
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.version)) {
        this.version = data().deepCopy(fields()[5].schema(), other.version);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.created_at_ts)) {
        this.created_at_ts = data().deepCopy(fields()[6].schema(), other.created_at_ts);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing envelope_metadata instance
     * @param other The existing instance to copy.
     */
    private Builder(io.hops.examples.flink.envelope_metadata other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.client_ref)) {
        this.client_ref = data().deepCopy(fields()[0].schema(), other.client_ref);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.created_at)) {
        this.created_at = data().deepCopy(fields()[1].schema(), other.created_at);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.source)) {
        this.source = data().deepCopy(fields()[2].schema(), other.source);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.tags)) {
        this.tags = data().deepCopy(fields()[3].schema(), other.tags);
        fieldSetFlags()[3] = true;
      }
      this.tagsBuilder = null;
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.version)) {
        this.version = data().deepCopy(fields()[5].schema(), other.version);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.created_at_ts)) {
        this.created_at_ts = data().deepCopy(fields()[6].schema(), other.created_at_ts);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'client_ref' field.
      * @return The value.
      */
    public java.lang.String getClientRef() {
      return client_ref;
    }

    /**
      * Sets the value of the 'client_ref' field.
      * @param value The value of 'client_ref'.
      * @return This builder.
      */
    public io.hops.examples.flink.envelope_metadata.Builder setClientRef(java.lang.String value) {
      validate(fields()[0], value);
      this.client_ref = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'client_ref' field has been set.
      * @return True if the 'client_ref' field has been set, false otherwise.
      */
    public boolean hasClientRef() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'client_ref' field.
      * @return This builder.
      */
    public io.hops.examples.flink.envelope_metadata.Builder clearClientRef() {
      client_ref = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_at' field.
      * @return The value.
      */
    public java.lang.Long getCreatedAt() {
      return created_at;
    }

    /**
      * Sets the value of the 'created_at' field.
      * @param value The value of 'created_at'.
      * @return This builder.
      */
    public io.hops.examples.flink.envelope_metadata.Builder setCreatedAt(java.lang.Long value) {
      validate(fields()[1], value);
      this.created_at = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'created_at' field has been set.
      * @return True if the 'created_at' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'created_at' field.
      * @return This builder.
      */
    public io.hops.examples.flink.envelope_metadata.Builder clearCreatedAt() {
      created_at = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * @return The value.
      */
    public java.lang.String getSource() {
      return source;
    }

    /**
      * Sets the value of the 'source' field.
      * @param value The value of 'source'.
      * @return This builder.
      */
    public io.hops.examples.flink.envelope_metadata.Builder setSource(java.lang.String value) {
      validate(fields()[2], value);
      this.source = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'source' field.
      * @return This builder.
      */
    public io.hops.examples.flink.envelope_metadata.Builder clearSource() {
      source = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'tags' field.
      * @return The value.
      */
    public io.hops.examples.flink.tags getTags() {
      return tags;
    }

    /**
      * Sets the value of the 'tags' field.
      * @param value The value of 'tags'.
      * @return This builder.
      */
    public io.hops.examples.flink.envelope_metadata.Builder setTags(io.hops.examples.flink.tags value) {
      validate(fields()[3], value);
      this.tagsBuilder = null;
      this.tags = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'tags' field has been set.
      * @return True if the 'tags' field has been set, false otherwise.
      */
    public boolean hasTags() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'tags' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.hops.examples.flink.tags.Builder getTagsBuilder() {
      if (tagsBuilder == null) {
        if (hasTags()) {
          setTagsBuilder(io.hops.examples.flink.tags.newBuilder(tags));
        } else {
          setTagsBuilder(io.hops.examples.flink.tags.newBuilder());
        }
      }
      return tagsBuilder;
    }

    /**
     * Sets the Builder instance for the 'tags' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.hops.examples.flink.envelope_metadata.Builder setTagsBuilder(io.hops.examples.flink.tags.Builder value) {
      clearTags();
      tagsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'tags' field has an active Builder instance
     * @return True if the 'tags' field has an active Builder instance
     */
    public boolean hasTagsBuilder() {
      return tagsBuilder != null;
    }

    /**
      * Clears the value of the 'tags' field.
      * @return This builder.
      */
    public io.hops.examples.flink.envelope_metadata.Builder clearTags() {
      tags = null;
      tagsBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public io.hops.examples.flink.envelope_metadata.Builder setType(java.lang.String value) {
      validate(fields()[4], value);
      this.type = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public io.hops.examples.flink.envelope_metadata.Builder clearType() {
      type = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public java.lang.Long getVersion() {
      return version;
    }

    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public io.hops.examples.flink.envelope_metadata.Builder setVersion(java.lang.Long value) {
      validate(fields()[5], value);
      this.version = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public io.hops.examples.flink.envelope_metadata.Builder clearVersion() {
      version = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_at_ts' field.
      * @return The value.
      */
    public java.lang.Long getCreatedAtTs() {
      return created_at_ts;
    }

    /**
      * Sets the value of the 'created_at_ts' field.
      * @param value The value of 'created_at_ts'.
      * @return This builder.
      */
    public io.hops.examples.flink.envelope_metadata.Builder setCreatedAtTs(java.lang.Long value) {
      validate(fields()[6], value);
      this.created_at_ts = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'created_at_ts' field has been set.
      * @return True if the 'created_at_ts' field has been set, false otherwise.
      */
    public boolean hasCreatedAtTs() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'created_at_ts' field.
      * @return This builder.
      */
    public io.hops.examples.flink.envelope_metadata.Builder clearCreatedAtTs() {
      created_at_ts = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public envelope_metadata build() {
      try {
        envelope_metadata record = new envelope_metadata();
        record.client_ref = fieldSetFlags()[0] ? this.client_ref : (java.lang.String) defaultValue(fields()[0]);
        record.created_at = fieldSetFlags()[1] ? this.created_at : (java.lang.Long) defaultValue(fields()[1]);
        record.source = fieldSetFlags()[2] ? this.source : (java.lang.String) defaultValue(fields()[2]);
        if (tagsBuilder != null) {
          record.tags = this.tagsBuilder.build();
        } else {
          record.tags = fieldSetFlags()[3] ? this.tags : (io.hops.examples.flink.tags) defaultValue(fields()[3]);
        }
        record.type = fieldSetFlags()[4] ? this.type : (java.lang.String) defaultValue(fields()[4]);
        record.version = fieldSetFlags()[5] ? this.version : (java.lang.Long) defaultValue(fields()[5]);
        record.created_at_ts = fieldSetFlags()[6] ? this.created_at_ts : (java.lang.Long) defaultValue(fields()[6]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<envelope_metadata>
    WRITER$ = (org.apache.avro.io.DatumWriter<envelope_metadata>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<envelope_metadata>
    READER$ = (org.apache.avro.io.DatumReader<envelope_metadata>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
